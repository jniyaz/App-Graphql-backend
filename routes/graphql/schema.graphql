"A datetime string with format 'Y-m-d H:i:s', e.g. '2018-01-01 13:00:00'."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format 'Y-m-d', e.g. '2011-05-23'."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    # Books
    users: [User!]! @paginate(type: "paginator" model: "App\\User")
    user(id: ID @eq): User @find(model: "App\\User")

    # Books
    books: [Book] @all
    book(id: ID @eq): Book @find
    booksByFeatured(featured: Boolean! @eq): [Book] @all
    # Custom resolvers
    booksSearchByAuthor(search: String!): [Book]

    # Categories
    categories: [Category] @all
    category(id: ID @eq): Category @find
}

type Mutation {
    # Users
    createUser(
        name: String @rules(apply: ["required"])
        email: String @rules(apply: ["required", "email", "unique:users,email"])
    ): User @create(model: "App\\User")
    updateUser(
        id: ID @rules(apply: ["required"])
        name: String
        email: String @rules(apply: ["email"])
    ): User @update(model: "App\\User")
    deleteUser(
        id: ID @rules(apply: ["required"])
    ): User @delete(model: "App\\User")

    # Categories
    createCategory(title: String @rules(apply: ["required", "unique:categories,title"])): Category @create
    updateCategory(id: ID @rules(apply: ["required"])
                   title: String @rules(apply: ["required", "unique:categories,title"])
    ): Category @update
    deleteCategory(id: ID! @rules(apply: ["required"])): Category @delete

    # Books
    createBook(
        title: String! @rules(apply: ["required"])
        author_name: String! @rules(apply: ["required"])
        image: String
        link: String
        description: String
        featured: Boolean
    ): Book @create

    updateBook(
        id: ID @rules(apply: ["required"])
        title: String! @rules(apply: ["required"])
        author_name: String! @rules(apply: ["required"])
        image: String
        link: String
        description: String
        featured: Boolean
    ): Book @update

    deleteBook(
        id: ID! @rules(apply: ["required"])
    ): Book @delete
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Category {
    id: ID!
    title: String!
    active: Boolean!
    created_at: DateTime
    books: [Book]! @belongsToMany
}

type Book {
    id: ID!
    title: String!
    author_name: String!
    image: String
    link: String
    description: String
    featured: Boolean
    active: Boolean
    created_at: DateTime
    categories: [Category]! @belongsToMany
}

